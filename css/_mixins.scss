// Mixins.scss
// Snippets de CSS reusável para desenvolver rápido e manter o código legível.
// -----------------------------------------------------------------


@mixin linkVisited($color) {
  color: $color;

  &:visited { color: $color; }
}

@mixin linkColor($color) {
  @include linkVisited($color);

  &:hover { color: $color; }
}

@mixin reduGradient($color1, $color2, $slider: 0.5) {
  @if ($slider < 0.5) {
    @include background-image(linear-gradient(bottom, $color1, $color2 ($slider * 2)));
  }
  @if ($slider == 0.5) {
    @include background-image(linear-gradient(bottom, $color1, $color2));
  }
  @if ($slider > 0.5) {
    @include background-image(linear-gradient(bottom, $color1 (($slider * 2) - 1), $color2));
  }
}

// MIXINS DE UTILIDADE.
// --------------------------------------------------

@mixin text-replacement() {
  border: 0;
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
  background-color: transparent;
}

@mixin pseudo-before($marginRight: 5px, $float: true) {
  content: "";
  display: inline-block;
  vertical-align: bottom;
  margin-right: $marginRight;

  @if ($float) {
    float: left;
  }
}

@mixin pseudo-after($marginLeft: 5px, $float: true) {
  content: "";
  display: inline-block;
  vertical-align: bottom;
  margin-left: $marginLeft;

  @if ($float) {
    float: right;
  }
}

// Clearfix.
// --------
// Para limpar floats like a boss h5bp.com/q.
@mixin clearfix() {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

// Webkit-style focus.
// ------------------
@mixin tab-focus() {
  // Default.
  outline: thin dotted #333;
  // Webkit.
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Atalhos de dimensionamento.
// -------------------------
@mixin size($width: 5px, $height: 5px) {
  width: $width;
  height: $height;
}
@mixin square($size: 5px) {
  @include size($size, $size);
}


// Fontes.
// ==========================================================================

@mixin font-family-sans-serif { font-family: $baseFontFamily; }

@mixin font-shorthand($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight) {
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}

@mixin font-sans-serif($size: $baseFontSize, $weight: normal, $lineHeight: $baseLineHeight) {
  @include font-family-sans-serif;
  @include font-shorthand($size, $weight, $lineHeight);
  letter-spacing: normal;
}

@mixin font-family-monospace { font-family: $monospaceFontFamily; }


// PROPRIEDADES CSS3.
// --------------------------------------------------

// Border Radius.
@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

// Drop shadows.
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}

// Transições.
@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}

// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// Opacidade.
@mixin opacity($opacity: 100) {
  opacity: $opacity / 100;
}

// MIXINS DOS COMPONENTES.
// --------------------------------------------------

// SETAS POPOVER.
// -------------------------
// Para tooltips e popovers.
@mixin popoverArrow-top($arrowWidth: 8px, $borderColor: $gray6) {
  bottom: 0;
  left: 50%;
  margin-left: -$arrowWidth;
  border-left: $arrowWidth solid transparent;
  border-right: $arrowWidth solid transparent;
  border-top: $arrowWidth solid $borderColor;
}
@mixin popoverArrow-left($arrowWidth: 8px, $borderColor: $gray6, $right: 0) {
  top: 50%;
  right: $right;
  margin-top: -$arrowWidth;
  border-top: $arrowWidth solid transparent;
  border-bottom: $arrowWidth solid transparent;
  border-left: $arrowWidth solid $borderColor;
}
@mixin popoverArrow-bottom($arrowWidth: 8px, $borderColor: $gray6, $top: 0) {
  top: $top;
  left: 50%;
  margin-left: -$arrowWidth;
  border-left: $arrowWidth solid transparent;
  border-right: $arrowWidth solid transparent;
  border-bottom: $arrowWidth solid $borderColor;
}
@mixin popoverArrow-right($arrowWidth: 8px, $borderColor: $gray6, $left: 0) {
  top: 50%;
  left: $left;
  margin-top: -$arrowWidth;
  border-top: $arrowWidth solid transparent;
  border-bottom: $arrowWidth solid transparent;
  border-right: $arrowWidth solid $borderColor;
}

// Sistema de grids.
@mixin container-fixed() {
  width: $gridRowWidth;
  margin-left: auto;
  margin-right: auto;
  @include clearfix();
}

@mixin gridSystem-columns ($gridGutterWidth, $gridColumnWidth, $gridRowWidth, $columns) {
  width: ($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns - 1));
}

@mixin gridSystem-offset($gridColumnWidth, $gridGutterWidth, $columns) {
  margin-left: ($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns - 1)) + ($gridGutterWidth * 2);
}

@mixin gridSystem-gridColumn($gridGutterWidth) {
  float: left;
  margin-left: $gridGutterWidth;
}

@mixin gridSystem-generate($gridColumns, $gridColumnWidth, $gridGutterWidth) {

  .row {
    margin-left: $gridGutterWidth * -1;
    @include clearfix();
  }

  [class*="span"] { @include gridSystem-gridColumn($gridGutterWidth); }

  // Colunas padrões.
  .span1     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 1); }
  .span2     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 2); }
  .span3     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 3); }
  .span4     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 4); }
  .span5     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 5); }
  .span6     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 6); }
  .span7     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 7); }
  .span8     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 8); }
  .span9     { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 9); }
  .span10    { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 10); }
  .span11    { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 11); }
  .span12    { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 12); }
  .span13    { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 13); }
  .span14    { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 14); }
  .span15    { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 15); }
  .span16,
  .container { @include gridSystem-columns($gridGutterWidth, $gridColumnWidth, $gridRowWidth, 16); }

  // Opções de colunas de deslocamento.
  .offset1   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 1); }
  .offset2   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 2); }
  .offset3   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 3); }
  .offset4   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 4); }
  .offset5   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 5); }
  .offset6   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 6); }
  .offset7   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 7); }
  .offset8   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 8); }
  .offset9   { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 9); }
  .offset10  { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 10); }
  .offset11  { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 11); }
  .offset12  { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 12); }
  .offset13  { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 13); }
  .offset14  { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 14); }
  .offset15  { @include gridSystem-offset($gridColumnWidth, $gridGutterWidth, 15); }
}

@mixin input-span($columns, $gridColumnWidth, $gridGutterWidth) {
  width: (($gridColumnWidth) * $columns) + ($gridGutterWidth * ($columns - 1)) - 10;
}

@mixin grid-input($gridColumnWidth, $gridGutterWidth) {
  textarea,
  input[type="text"],
  input[type="password"] {
    // Sobrescreve o margin-left do sistema de grid.
    margin-left: 0;
  }

  // Gera os .spanX.
  $i: $gridColumns;
  @while $i > 0 {
    input.span#{$i},
    textarea.span#{$i} { @include input-span($i, $gridColumnWidth, $gridGutterWidth); }

    $i: $i - 1;
  }
}

// Retorna a largura de uma grid, dado seu número.
@function grid-width($n) {
  @return $n * $gridColumnWidth + ($n - 1) * $gridGutterWidth;
}

// Estilo dos botões.
@mixin button(
    $color,
    $border-color,
    $box-shadow-color,
    $hover-color,
    $hover-border-color,
    $active-border-color,
    $active-background-color,
    $hover-active-color,
    $hover-active-border-color,
    $disabled-color,
    $disabled-border-color,
    $disabled-background-color) {
  color: $color;
  border-color: $border-color;

  .boxshadow & { @include box-shadow(inset 0 1px 0 $box-shadow-color); }

  &:visited { color: $color; }

  &:hover {
    color: $hover-color;
    border-color: $hover-border-color;
  }

  .open > &,
  .no-cssgradients.gt-ie8 .open > &,
  &:active {
    border-color: $active-border-color;
    background-color: $active-background-color;
    background-image: none;
  }

  .open > &:hover,
  &:hover:active {
    color: $hover-active-color;
    border-color: $hover-active-border-color;
    background-color: $active-background-color;
  }

  &.button-disabled,
  &.button-disabled:hover,
  &[disabled],
  &[disabled]:hover,
  .no-cssgradients.gt-ie8 &.button-disabled,
  .no-cssgradients.gt-ie8 &[disabled] {
    color: $disabled-color;
    border-color: $disabled-border-color;
    background-color: $disabled-background-color;
    background-image: none;

    .boxshadow & { @include box-shadow(none); }
  }
}
